<?php

namespace app\controllers;

use app\components\Browser;
use app\models\Boshqarma;
use app\models\IdoraType;
use app\models\InnForm;
use app\models\search\SharntomaSearch;
use app\models\search\TashkilotSearch;
use app\models\Shartnoma;
use app\models\Tashkilot;
use app\models\User;
use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;
use app\models\LoginForm;

class SiteController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login','error'],
                        'allow' => true,

                    ],
                    [
                        'allow' => true,
                        'roles' => ['@'],

                    ],

                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {

        if(!Yii::$app->user->isGuest) {
            $ny = date('Y');
            $nd = date('d');
            $nm = date('m');
            $nh = date('h');
            $ni = date('i');
            $ly = date('Y', strtotime( Yii::$app->user->identity->setting));
            $lm = date('m', strtotime(Yii::$app->user->identity->setting));
            $ld = date('d', strtotime(Yii::$app->user->identity->setting));
            $lh = date('h', strtotime( Yii::$app->user->identity->setting));
            $li = date('i', strtotime( Yii::$app->user->identity->setting));
            if ($ny != $ly
                or $nm != $lm
                or $nd != $ld
                or $nh != $lh
                or (($nh * 60 + $ni) - ($lh * 60 + $li)) >= 60
            ) {
                //Yii::$app->user->logout();
            }else{
                $m = User::findOne(Yii::$app->user->getId());
                $m->setting = date('Y-m-d h:i:s');
                $m->save();
            }
        }
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function afterAction($action, $result)
    {

        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }

    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {

        $searchModel = new SharntomaSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);

    }
    public function actionStatuschangeindex($id=null, $status=null){
        if($id==null){
            echo 0;
            exit;
        }
        if($status==null){
            echo 0;
            exit;
        }
        if($model = Shartnoma::findOne($id)){
            if($status == 5){
                $model->tolandi = $model->shartnoma_summasi;
                $model->qoldiq = 0;
            }
            if($status == 2){
                $model->tolandi = intval($model->shartnoma_summasi*0.15);
                $model->qoldiq = $model->shartnoma_summasi - $model->tolandi;
            }
            if($status == 3){
                $model->tolandi = intval($model->shartnoma_summasi*0.15);
                $model->qoldiq = $model->shartnoma_summasi - $model->tolandi;
            }
            if($status == 4){
                $model->tolandi = $model->shartnoma_summasi;
                $model->qoldiq = 0;
            }
            if($status == 1){
                $model->tolandi = 0;
                $model->qoldiq = $model->shartnoma_summasi;
            }
            if($status == 0){
                $model->tolandi = 0;
                $model->qoldiq = $model->shartnoma_summasi;
            }
            if($status == 6){
                $model->tolandi = 0;
                $model->qoldiq = 0;
            }
            $model->status = $status;
            $model->save();
            echo 1;
            exit;
        }else{
            echo 0;
            exit;
        }
    }




    public function actionAddshartnoma(){

        $model = new Shartnoma();
        if($model->load(Yii::$app->request->post())){
            $model->save();
            return $this->redirect('listshartnoma');
        }
        return $this->render('addshartnoma',[
            'model'=>$model,
        ]);
    }
    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $this->layout = "main_login.php";
        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            $m = User::findOne(Yii::$app->user->getId());
            $m->setting = date('Y-m-d h:i:s');
            $m->save();
            return $this->goBack();
        }
        return $this->render('login', [
            'model' => $model,
        ]);
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }





    public function actionDb(){
        $db = new yii\db\Connection([
            'dsn' => 'mysql:host=localhost;dbname=xvkm_uz_shartnoma_base',
            'username' => 'root',
            'password' => '',
            'charset' => 'utf8',
        ]);
        $a = $db->createCommand("select * from `sh_organization`")->queryAll();

        echo "<table border='1'>";

        foreach ($a as $item){

            $model = new Tashkilot();
            $model->name = $item['name'];
            $model->kompleks_id = $item['kompleks_id'];
            $model->boshqarma_id = $item['boshqarma_id'];
            $model->inn = $item['inn'];
            $model->address = $item['address'];
            $model->phone_tashkilot = $item['phone'];
            $model->district_id = $item['city_id'];
            $model->idora_type_id = 0;
            $model->save();
            echo"<tr>
                    <td>{$model->id}</td>
                    <td>{$model->name}</td>
                    <td>{$model->address}</td>
                </tr>";
            $model = null;

        }
        echo "</table>";

        exit;



    }





//   @begin Idora turlari bilan ishlash



    public function actionAddidoratype(){
        $model = new IdoraType();
        if($model->load(Yii::$app->request->post()) and $model->save()){
            return $this->refresh();
        }
        $model1 = IdoraType::find()->all();
        return $this->render('addidoratype',[
            'model'=>$model,
            'model1'=>$model1
        ]);
    }

    public function actionUpdateidoratype($id){
        $model = IdoraType::findOne($id);
        if($model->load(Yii::$app->request->post()) and $model->save()){
            return $this->redirect(['addidoratype']);
        }
        $model1 = IdoraType::find()->all();
        return $this->render('addidoratype',[
            'model'=>$model,
            'model1'=>$model1
        ]);
    }

//   @end Idora turlari bilan ishlash tugadi



// @begin Tashkilot bilan ishlash

    public function actionChangeinn($id){
        $model = Tashkilot::findOne($id);
        if($model->load(Yii::$app->request->post()) and $model->save()){
            return $this->redirect(['listtashkilot']);
        }
        return $this->redirect(['listtashkilot']);
    }

    public function actionAddtashkilot(){
        $model = new Tashkilot();
        if($model->load(Yii::$app->request->post()) and $model->save()){
            return $this->redirect(['listtashkilot']);
        }
        return $this->render('addtashkilot',[
            'model'=>$model,
        ]);
    }

    public function actionListtashkilot(){

        $searchModel = new TashkilotSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('listtashkilot', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);


    }


    public function actionViewtashkilot($id, $type = null){
        $model = Tashkilot::findOne($id);
        $shartnomalar = Shartnoma::find()->where(['tashkilot_id'=>$id])->orderBy(['created'=>SORT_DESC])->all();

        if($type!=null){
            $shartnomalar = Shartnoma::find()->orderBy(['created'=>SORT_DESC])->where(['status'=>$type])->all();
        }
        if($type==null){
            $type=-1;
        }
        return $this->render('viewtashkilot',[
            'model'=>$model,
            'type'=>$type,
            'shartnomalar'=>$shartnomalar,
        ]);
    }

    public function actionAddtshartnoma($id){
        $model = new Shartnoma();
        $tashkilot = Tashkilot::findOne($id);
        $model->boshqarma_id = $tashkilot->boshqarma_id;
        $model->kompleks_id = $tashkilot->kompleks_id;
        $model->idora_type_id = $tashkilot->idora_type_id;
        $model->district_id = $tashkilot->district_id;
        $model->tashkilot_id = $tashkilot->id;
        $model->tolandi = 0;
      //  $model->shartnoma_berildi = date('Y-m-d');

        if($model->load(Yii::$app->request->post())){

            $model->qoldiq = intval($model->shartnoma_summasi)-intval($model->tolandi);
            //$model->shartnoma_berildi = date('Y-m-d');
			if(!$model->shartnoma_berildi){
				$model->shartnoma_berildi = date('Y-m-d');
			}

            $model->save();
            return $this->redirect(['viewtashkilot','id'=>$id]);
        }
        return $this->render('addtshartnoma',[
            'model'=>$model,
            'tashkilot'=>$tashkilot,
        ]);
    }

    public function actionUpdatetashkilot($id){
        $model = Tashkilot::findOne($id);
        if($model->load(Yii::$app->request->post())){
            $model->save();
            return $this->redirect(['listtashkilot']);
        }
        return $this->render('addtashkilot',[
            'model'=>$model,
        ]);
    }

    public function actionUpdatetshartnoma($id){
        $model = Shartnoma::findOne($id);
        $tashkilot = Tashkilot::findOne($model->tashkilot_id);
        if($model->load(Yii::$app->request->post())){

            $model->qoldiq = intval($model->shartnoma_summasi)-intval($model->tolandi);

            $model->save();
            return $this->redirect(['viewtashkilot','id'=>$model->tashkilot_id]);
        }
        return $this->render('addtshartnoma',[
            'model'=>$model,
            'tashkilot'=>$tashkilot,
        ]);
    }

    public function actionGetshartnoma($id){
        $status = [
            0=>'Янги',
            1=>'Қабул қилинган пул ўтирилмаган',
            2=>'Қабул қилинган пул қисман ўтирилган',
            3=>'Қабул қилинмаган пул қисман ўтирилган',
            4=>'Қабул қилинмаган пул ўтирилган',
            5=>'Ёпилган',
            6=>'Бузилган',
        ];
        $this->layout="empty.php";
        $model = Shartnoma::findOne($id);
        $model->shartnoma_summasi = $this->render('_number',['number'=>$model->shartnoma_summasi]);
        $model->tolandi = $this->render('_number',['number'=>$model->tolandi]);
        $model->qoldiq = $this->render('_number',['number'=>$model->qoldiq]);
        echo "
            <table class='table table-bordered table-hover table-responsive'>
                
                <tr>
                    <th>Шартнома рақами</th>
                    <td>{$model->shartnoma_raqami}</td>
                </tr>
                
                <tr>
                    <th>Шартнома статус</th>
                    <td>{$status[$model->status]}</td>
                </tr>
                <tr>
                    <th>Шартнома тури</th>
                    <td>{$model->shartnomatype->name}</td>
                </tr>
               <tr>
                    <th>Шартнома суммаси</th>
                    <td>{$model->shartnoma_summasi} so'm</td>
                </tr>
                <tr>
                    <th>Тўланди</th>
                    <td>{$model->tolandi} so'm</td>
                </tr>
                <tr>
                    <th>Қолдиқ</th>
                    <td>{$model->qoldiq} so'm</td>
                </tr>
                <tr>
                    <th>Масул ҳодим</th>
                    <td>{$model->masul_hodim}</td>
                </tr>
                <tr>
                    <th>Масул ҳодим тел.</th>
                    <td>{$model->phone_masul_hodim}</td>
                </tr>
                <tr>
                    <th>Шартнома берилган сана</th>
                    <td>{$model->shartnoma_berildi}</td>
                </tr>
                <tr>
                    <th>Шартномани қайтариш санаси</th>
                    <td>{$model->shartnoma_qaytarishi}</td>
                </tr>
                <tr>
                    <th>Далолатнома санаси</th>
                    <td>{$model->dalolatnoma_sana}</td>
                </tr>
                <tr>
                    <th>Қабул қилган ҳодим</th>
                    <td>{$model->qabul_qilgan_hodim}</td>
                </tr>
                <tr>
                    <th>Изоҳ</th>
                    <td>{$model->izoh}</td>
                </tr>
                
                
            </table>
        
        
        ";


        exit;

    }

    // @end Tashkilot bilan ishlash tugadi



    // @begin shartnoma bilan ishlash


    public function actionAddcontract(){
        $model = new InnForm();
        if($model->load(Yii::$app->request->post())){
            if($t = Tashkilot::findOne(['inn'=>$model->inn])){
                return $this->redirect(['addtshartnoma','id'=>$t->id]);
            }else{
                return $this->render('findinn',[
                    'model'=>$model,
                    'error'=>1
                ]);
            }
        }
        return $this->render('findinn',[
            'model'=>$model,
            'error'=>0
        ]);
    }


    // @end Shartnoma bilan ishlash

}

